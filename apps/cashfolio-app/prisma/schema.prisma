// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  ASSET
  LIABILITY
  INCOME
  EXPENSE
}

enum AccountUnit {
  CURRENCY
  SECURITY
}

model AccountGroup {
  id   String      @default(cuid())
  name String
  slug String
  type AccountType

  parentGroup   AccountGroup? @relation("parent-child", fields: [parentGroupId], references: [id], onDelete: Restrict)
  parentGroupId String?

  childGroups AccountGroup[] @relation("parent-child")
  accounts    Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id])
  @@unique([slug])
}

model Account {
  id             String       @default(cuid())
  name           String
  slug           String
  type           AccountType
  group          AccountGroup @relation(fields: [groupId], references: [id], onDelete: Restrict)
  groupId        String
  unit           AccountUnit
  currency       String?
  openingBalance Decimal?

  bookings Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id])
  @@unique([slug])
}

model Transaction {
  id          String @default(cuid())
  description String

  bookings Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id])
}

model Booking {
  id          String   @default(cuid())
  date        DateTime
  description String

  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)

  accountId String
  account   Account @relation(fields: [accountId], references: [id])

  value Decimal

  @@id([id])
}
